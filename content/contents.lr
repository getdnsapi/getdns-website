_model: frontpage
---
title: Welcome to getdns!
---
features:

#### feature ####
title: Download the 1.3.0 release!
----
text:

The latest source code tarball is available for download  with checksum [here](releases/).

[![Packaging status](https://repology.org/badge/tiny-repos/getdns.svg)](https://repology.org/metapackage/getdns)
----
image: fireworks.png
----
link: /getdns-latest.tar.gz
#### feature ####
title: Stubby
----
text: Stubby is an experimental implementation of a DNS Privacy enabled stub resolver. It is currently suitable for advanced/technical users - all feedback is welcome! Also see [dnsprivacy.org](https://dnsprivacy.org/) for more information on DNS Privacy.
----
image: stubby.png
----
link: https://dnsprivacy.org/wiki/x/JYAT
#### feature ####
title: Do a Query
----
text: Perform DNS queries using the web application that is built using getdns and examine the results displayed.
----
image: query-blue.png
----
link: query/
#### feature ####
title: Fork me on github
----
text: The code repository for getdns is available at <https://github.com/getdnsapi/getdns>. You can fork from the repository.
----
image: octocat.png
----
link: https://github.com/getdnsapi/getdns/fork
---
carousel:

#### slide ####
text: 
----
image: getdns-logo.png
#### slide ####
text:

 With the development of this API, we intend to offer application developers a modernized and flexible way to access DNS security (DNSSEC) and other powerful new DNS features; a particular hope is to inspire application developers towards innovative security solutions in their applications.
----
image: allison-gowri-sara-jad.png
#### slide ####
text: Stubby is the name given to a mode of using getdns which enables it to act as a local DNS Privacy stub resolver (using DNS-over-TLS).
----
image: stubby-600x230.png
---
body:

getdns is a modern asynchronous DNS API.
It implements DNS entry points from a design developed and vetted by application developers, in an [API specification](/documentation/spec/).
The open source C implementation of getdns is developed and maintained in collaboration by NLnet Labs, Sinodun and No Mountain Software.
This implementation is licensed under the [New BSD License](http://opensource.org/licenses/BSD-3-Clause). 
